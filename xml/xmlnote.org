* xsl declaration
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
* xsl:template
<xsl:template match="/">
<xsl:apply-templates select="..."> 
* xsl:value-of
<xsl:value-of select="catalog/cd/title"/>
* xsl:for-eadh
<xsl:for-each select="catalog/cd">
<xsl:for-each select="catalog/cd[artist='Bob Dylan']">
* compare operator
= != @lt; @gt;
* xsl:if
<xsl:if test="price &gt; 10">
* xsl:choose
<xsl:choose>
  <xsl:when test="expression">
    ... output ...
  </xsl:when>
  <xsl:otherwise>
    ... output ....
  </xsl:otherwise>
</xsl:choose>
* xpath
| 表达式   | 描述                                                     |
|----------+----------------------------------------------------------|
| nodename | 选取此节点的所有子节点                                   |
| /        | 从根节点选取                                             |
| //       | 从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置 |
| .        | 选取当前节点                                             |
| ..       | 选取当前节点的父节点                                     |
| @        | 选取属性                                                 |

| 路径表达式                         | 结果                                                                              |
|------------------------------------+-----------------------------------------------------------------------------------|
| /bookstore/book[1]                 | 选取属于bookstore子元素的第一个book元素。                                         |
| /bookstore/book[last()]            | 选取属于bookstore子元素的最后一个book元素。                                       |
| /bookstore/book[last()-1]          | 选取属于bookstore子元素的倒数第二个book元素。                                     |
| /bookstore/book[position()<3]      | 选取最前面的两个属于bookstore元素的子元素的book元素。                             |
| //title[@lang]                     | 选取所有拥有名为lang的属性的title元素。                                           |
| //title[@lang='eng']               | 选取所有title元素，且这些元素拥有值为eng的lang属性。                              |
| /bookstore/book[price>35.00]       | 选取所有bookstore元素的book元素，且其中的price元素的值须大于35.00。               |
| /bookstore/book[price>35.00]/title | 选取所有bookstore元素中的book元素的title元素，且其中的price元素的值须大于 35.00。 |

| 通配符 | 描述               |
|--------+--------------------|
| *      | 匹配任何元素节点   |
| @*     | 匹配任何属性节点   |
| node() | 匹配任何类型的节点 |

| 路径表达式   | 结果                          |
|--------------+-------------------------------|
| /bookstore/* | 选取bookstore元素的所有子节点 |
| //*          | 选取文档中的所有元素          |
| //title[@*]  | 选取所有带有属性的title元素。 |

| 轴名称             | 结果                                                   |
|--------------------+--------------------------------------------------------|
| ancestor           | 选取当前节点的所有先辈(父、祖父等)                     |
| ancestor-or-self   | 选取当前节点的所有先辈(父、祖父等)以及当前节点本身     |
| attribute          | 选取当前节点的所有属性                                 |
| child              | 选取当前节点的所有子元素。                             |
| descendant         | 选取当前节点的所有后代元素(子、孙等)。                 |
| descendant-or-self | 选取当前节点的所有后代元素(子、孙等)以及当前节点本身。 |
| following          | 选取文档中当前节点的结束标签之后的所有节点。           |
| namespace          | 选取当前节点的所有命名空间节点                         |
| parent             | 选取当前节点的父节点。                                 |
| preceding          | 选取文档中当前节点的开始标签之前的所有节点。           |
| preceding-sibling  | 选取当前节点之前的所有同级节点。                       |
| self               | 选取当前节点。                                         |

| 例子                   | 结果                                                             |
|------------------------+------------------------------------------------------------------|
| child::book            | 选取所有属于当前节点的子元素的book节点                           |
| attribute::lang        | 选取当前节点的lang属性                                           |
| child::*               | 选取当前节点的所有子元素                                         |
| attribute::*           | 选取当前节点的所有属性                                           |
| child::text()          | 选取当前节点的所有文本子节点                                     |
| child::node()          | 选取当前节点的所有子节点                                         |
| descendant::book       | 选取当前节点的所有book后代                                       |
| ancestor::book         | 选择当前节点的所有book先辈                                       |
| ancestor-or-self::book | 选取当前节点的所有book先辈以及当前节点(假如此节点是book节点的话) |
| child::*/child::price  | 选取当前节点的所有price孙。                                      |

